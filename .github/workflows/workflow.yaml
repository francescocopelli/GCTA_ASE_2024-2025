name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set custom workspace for main branch
        if: ${{ github.ref_name == 'main' }}
        run: |
          CUSTOM_WORKSPACE="/tmp/main_branch_workspace"
          mkdir -p $CUSTOM_WORKSPACE
          cp -r $GITHUB_WORKSPACE/* $CUSTOM_WORKSPACE/
          export GITHUB_WORKSPACE=$CUSTOM_WORKSPACE
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      - name: Verify custom workspace
        run: |
          echo "Using workspace: $GITHUB_WORKSPACE"
          ls -al $GITHUB_WORKSPACE

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
            
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      
      - name: Build and start Docker services
        run: docker-compose up --build -d
              
      - name: Docker Scout
        uses: docker/scout-action@v1.15.1
        
      - name: Log running services and ports
        run: |
          echo "Listing running Docker services and their exposed ports:"
          docker ps

      - name: Wait for services to be ready
        run: |
          retries=30
          while ! nc -z localhost 8080; do
            echo "Waiting for service on port 8080..."
            sleep 10
            retries=$((retries - 1))
            if [ $retries -le 0 ]; then
              echo "Service did not start in time."
              exit 1
            fi
          done
          echo "Service is ready!"

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Sleep for 30 seconds
        run: sleep 20

      - name: Run API tests
        run: |
          postman collection run "${GITHUB_WORKSPACE}/postman/collections/GCTA Tests.json" -e "39572674-595d61b8-a2f9-4c18-a8a3-5ac4a64987fe" --integration-id "171433-${{ github.run_id }}" --insecure

      - name: Run Docker logs
        if: always()
        run: |
          echo "Checking dbm logs:"
          docker logs gcta_ase_2024-2025_db-manager_1 > db_manager_logs.txt 
          docker logs gcta_ase_2024-2025_user_player_1 > user_player_logs.txt 
          docker logs gcta_ase_2024-2025_user_player_auth_1 > user_player_auth_logs.txt 
      - name: Upload log files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: |
            db_manager_logs.txt
            user_player_logs.txt
            user_player_auth_logs.txt

      - name: Stop Docker services
        if: always()
        run: docker-compose down
