services:
  gateway_user:
    build: ./services/player_gateway
    ports:
      - 8080:80
    depends_on:
        - user_player
        - user_player_auth
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  gateway_admin:
    build: ./services/admin_gateway
    ports:
      - 8081:80
    depends_on:
      - user_admin
      - user_admin_auth
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  user_admin:
    build: ./services/admin
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  user_admin_auth:
    build: ./services/admin/auth
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  user_player:
    build: ./services/player
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  user_player_auth:
    build: ./services/player/auth
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  transaction:
    build: ./services/transaction
    depends_on:
      transactions_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  auction:
    build: ./services/auction
    depends_on:
      auctions_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  gacha:
    build: ./services/gacha
    depends_on:
      gacha_db:
        condition: service_healthy
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared

  db-manager:
    build: ./services/dbm
    networks:
      - microservice-network
    depends_on:
      users_db:
        condition: service_healthy
  

    volumes:
      - ./shared:/app/shared


  auctions_db:
    build: db/auctions_db
    networks:
      - microservice-network
    volumes:
      - ./dbdata/auctions_db:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      timeout: 5s
      retries: 10

  transactions_db:
    build: db/transactions_db
    networks:
      - microservice-network
    volumes:
      - ./dbdata/transactions_db:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      timeout: 5s
      retries: 10

  users_db:
    build: db/users_db
    networks:
      - microservice-network
    volumes:
      - ./dbdata/users_db:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      timeout: 5s
      retries: 10

  gacha_db:
    build: db/gacha_db
    networks:
      - microservice-network
    volumes:
      - ./dbdata/gacha_db:/var/lib/mysql:rw
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      timeout: 5s
      retries: 10

volumes:
  dbdata:


networks:
  microservice-network:
    driver: bridge
