services:
  gateway_user:
    build: ./services/player_gateway
    ports:
      - 8080:443
    depends_on:
      - user_player
      - user_player_auth
    networks:
      - users-network
    volumes:
      - ./shared:/app/shared
    mem_limit: 256m
    secrets:
      - cert
      - key
      - novel

  gateway_admin:
    build: ./services/admin_gateway
    ports:
      - 8081:443
    depends_on:
      - user_admin
      - user_admin_auth
    networks:
      - admin-network
    volumes:
      - ./shared:/app/shared
    mem_limit: 256m
    secrets:
      - cert
      - key
      - novel

  user_admin:
    build: ./services/admin
    depends_on:
      - users_db
    networks:
      - admin-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - users_cert
      - users_key
      - novel
      - db_user
      - db_password

  user_admin_auth:
    build: ./services/admin/auth
    depends_on:
      - users_db
    networks:
      - admin-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - users_cert
      - users_key
      - novel
      - db_user
      - db_password

  user_player:
    build: ./services/player
    depends_on:
      - users_db
    networks:
      - users-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - users_cert
      - users_key
      - novel
      - db_user
      - db_password

  user_player_auth:
    build: ./services/player/auth
    depends_on:
      - users_db
    networks:
      - users-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - users_cert
      - users_key
      - novel
      - db_user
      - db_password

  transaction:
    build: ./services/transaction
    depends_on:
      - transactions_db
    networks:
      - users-network
      - admin-network
      - transaction_db-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - transactions_cert
      - transactions_key
      - novel
      - db_user
      - db_password
      - client-key.pem
      - ca.pem
      - client-cert.pem

  auction:
    build: ./services/auction
    depends_on:
      - auctions_db
    networks:
      - users-network
      - admin-network
      - auction_db-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - auction_cert
      - auction_key
      - novel
      - db_user
      - db_password
      - client-key.pem
      - ca.pem
      - client-cert.pem

  gacha:
    build: ./services/gacha
    depends_on:
      - gacha_db
    networks:
      - users-network
      - admin-network
      - gacha_db-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - novel
      - db_user
      - db_password
      - gacha_cert
      - gacha_key
      - client-key.pem
      - ca.pem
      - client-cert.pem



  db-manager:
    build: ./services/dbm
    networks:
      - users-network
      - admin-network
      - user_db-network
    depends_on:
      - users_db
    volumes:
      - ./shared:/app/shared
    secrets:
      - novel
      - db_user
      - db_password
      - client-cert.pem
      - client-key.pem
      - ca.pem
      - users_cert
      - users_key


  auctions_db:
    build: db/auctions_db
    networks:
      - auction_db-network
    volumes:
      - ./db/auctions_db/backup:/var/lib/auctions_db/backup:rw
    environment:
      - MYSQL_ROOT_PASSWORD=/run/secrets/db_password
    stop_signal: SIGTERM
    stop_grace_period: 30s
    mem_limit: 1024m
    secrets:
      - db_user
      - db_password
      - ca.pem
      - server-cert.pem
      - server-key.pem

  transactions_db:
    build: db/transactions_db
    networks:
      - transaction_db-network
    volumes:
      - ./db/transactions_db/backup:/var/lib/transactions_db/backup:rw
    environment:
      - MYSQL_ROOT_PASSWORD=/run/secrets/db_password
    stop_signal: SIGTERM
    stop_grace_period: 30s
    mem_limit: 1024m
    secrets:
      - db_user
      - db_password
      - ca.pem
      - server-cert.pem
      - server-key.pem

  users_db:
    build: db/users_db
    networks:
      - user_db-network
    volumes:
      - ./db/users_db/backup:/var/lib/users_db/backup:rw
    environment:
      - MYSQL_ROOT_PASSWORD=/run/secrets/db_password
    stop_signal: SIGTERM
    stop_grace_period: 30s
    mem_limit: 1024m
    secrets:
      - db_user
      - db_password
      - ca.pem
      - server-cert.pem
      - server-key.pem

  gacha_db:
    build: db/gacha_db
    networks:
      - gacha_db-network
    volumes:
      - ./db/gacha_db/backup:/var/lib/gacha_db/backup:rw
    environment:
      - MYSQL_ROOT_PASSWORD=/run/secrets/db_password
    stop_signal: SIGTERM
    stop_grace_period: 30s
    mem_limit: 1024m
    secrets:
      - db_user
      - db_password
      - ca.pem
      - server-cert.pem
      - server-key.pem
#make 1 network per db
networks:
  user_db-network:
    driver: bridge
  gacha_db-network:
    driver: bridge
  auction_db-network:
    driver: bridge
  transaction_db-network:
    driver: bridge
  users-network:
    driver: bridge
  admin-network:
    driver: bridge


secrets:
  cert:
    file: ./certificates/cert.pem
  key:
    file: ./certificates/key.pem
  ca.pem:
    file: ./certificates/ca-cert.pem
  server-cert.pem:
    file: ./certificates/server-cert.pem
  server-key.pem:
    file: ./certificates/server-key.pem
  client-cert.pem:
    file: ./certificates/client-cert.pem
  client-key.pem:
    file: ./certificates/client-key.pem
  novel:
    file: ./poetry.txt
  db_user:
    file: ./db_user.txt
  db_password:
    file: ./db_password.txt
  users_cert:
    file: ./certificates/users_cert.pem
  users_key:
    file: ./certificates/users_key.pem
  transactions_cert:
    file: ./certificates/transactions_cert.pem
  transactions_key:
    file: ./certificates/transactions_key.pem
  gacha_cert:
    file: ./certificates/gacha_cert.pem
  gacha_key:
    file: ./certificates/gacha_key.pem
  auction_cert:
    file: ./certificates/auction_cert.pem
  auction_key:
    file: ./certificates/auction_key.pem