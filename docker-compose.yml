services:
  gateway_user:
    build: ./services/player_gateway
    ports:
      - 8080:443
    depends_on:
      - user_admin
      - user_admin_auth
      - user_player
      - user_player_auth
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  gateway_admin:
    build: ./services/admin_gateway
    ports:
      - 8081:443
    depends_on:
      - user_admin
      - user_admin_auth
      - user_player
      - user_player_auth
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  user_admin:
    build: ./services/admin
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  user_admin_auth:
    build: ./services/admin/auth
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  user_player:
    build: ./services/player
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  user_player_auth:
    build: ./services/player/auth
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  transaction:
    build: ./services/transaction
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./dbdata/transactions_db:/app/transactions.db
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  auction:
    build: ./services/auction
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./dbdata/auctions_db:/app/auction.db
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  gacha:
    build: ./services/gacha
    depends_on:
      - db-manager
    networks:
      - microservice-network
    volumes:
      - ./dbdata/gacha_db:/app/gacha.db
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

  db-manager:
    build: ./services/dbm
    networks:
      - microservice-network
    volumes:
      - ./dbdata/users_db:/app/users.db
      - ./shared:/app/shared
    secrets:
      - cert
      - key
      - novel

volumes:
  dbdata:
  user_db_data:


networks:
  microservice-network:
    driver: bridge

secrets:
  cert:
    file: ./cert.pem
  key:
    file: ./key.pem
  novel:
    file: ./poetry.txt