tosca_definitions_version: micro_tosca_yaml_1.1
description: micro.tosca
imports:
- micro: https://di-unipi-socc.github.io/microTOSCA/1.1/microTOSCA.yaml
topology_template:
  node_templates:
    Transactions_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: Transactions
          relationship: c
    Auction_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: Auctions
          relationship: c
    gacha_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: gachas
          relationship: c
    User_Admin_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: DB manager
          relationship: c
    User_Admin_Auth_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: DB manager
          relationship: c
    User_Player_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: DB manager
          relationship: c
    User_Player_Auth_Service:
      type: micro.nodes.Service
      requirements:
      - interaction:
          node: DB manager
          relationship: c
    Users:
      type: micro.nodes.Datastore
    DB manager:
      type: micro.nodes.Service
      requirements:
      - interaction: Users
    gachas:
      type: micro.nodes.Datastore
    Transactions:
      type: micro.nodes.Datastore
    Auctions:
      type: micro.nodes.Datastore
    Api Gateway:
      type: micro.nodes.MessageRouter
      requirements:
      - interaction: Transactions_Service
      - interaction: Auction_Service
      - interaction: gacha_Service
      - interaction: User_Player_Service
      - interaction: User_Player_Auth_Service
    Api Gateway Admin:
      type: micro.nodes.MessageRouter
      requirements:
      - interaction: User_Admin_Auth_Service
      - interaction: User_Admin_Service
      - interaction: Transactions_Service
      - interaction: Auction_Service
      - interaction: gacha_Service
  groups:
    adad:
      type: micro.groups.Edge
      members:
      - Api Gateway
      - Api Gateway Admin
    Player:
      type: micro.groups.Team
      members:
      - User_Player_Auth_Service
      - User_Player_Service
    Admin:
      type: micro.groups.Team
      members:
      - User_Admin_Service
      - User_Admin_Auth_Service
  relationship_templates:
    t:
      type: micro.relationships.InteractsWith
      properties:
        timeout: true
    c:
      type: micro.relationships.InteractsWith
      properties:
        circuit_breaker: true
    d:
      type: micro.relationships.InteractsWith
      properties:
        dynamic_discovery: true
    tc:
      type: micro.relationships.InteractsWith
      properties:
        timeout: true
        circuit_breaker: true
    td:
      type: micro.relationships.InteractsWith
      properties:
        timeout: true
        dynamic_discovery: true
    cd:
      type: micro.relationships.InteractsWith
      properties:
        circuit_breaker: true
        dynamic_discovery: true
    tcd:
      type: micro.relationships.InteractsWith
      properties:
        timeout: true
        circuit_breaker: true
        dynamic_discovery: true
