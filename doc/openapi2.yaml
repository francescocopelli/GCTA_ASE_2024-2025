openapi: 3.0.0
info:
  title: Gacha, Auction, Transaction, and Authentication Service API
  version: 1.0.0
  description: API for managing gacha rolls, user inventories, auctions, transactions, and user authentication.

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: AUTH
    description: Authentication and account management
  - name: USER
    description: Player-specific operations
  - name: ADMIN
    description: Administrative functions for managing users and system resources
  - name: TRANSACTION
    description: Handles in-game currency transactions for players and administrators
  - name: AUCTIONS
    description: Handles the creation and management of auctions and bids.
  - name: GACHA
    description: Handles gacha items and inventory management.

paths:
  /roll:
    post:
      tags:
        - GACHA
      summary: Perform a gacha roll for a random item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "player1"
                roll_cost:
                  type: number
                  example: 100
      responses:
        '200':
          description: Gacha roll successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gacha roll successful"
                  gacha_id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Rare Sword"
                  rarity:
                    type: string
                    example: "Rare"
                  new_balance:
                    type: number
                    example: 900
        '400':
          description: Missing data for gacha roll
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing data for gacha roll"
        '403':
          description: Insufficient funds for gacha roll
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Insufficient funds for gacha roll"
        '404':
          description: No available gacha items
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No available gacha items"

  /inventory/{user_id}:
    get:
      tags:
        - GACHA
      summary: Retrieve a user's gacha inventory
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: User's gacha inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  inventory:
                    type: array
                    items:
                      type: object
                      properties:
                        gacha_id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Rare Sword"
                        rarity:
                          type: string
                          example: "Rare"
        '404':
          description: No gacha items found for user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No gacha items found for user"

  /inventory:
    post:
      tags:
        - GACHA
      summary: Add a gacha item to a user's inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "player1"
                gacha_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Gacha item successfully added to user's inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gacha item successfully added to user's inventory"
        '400':
          description: Missing data to add to inventory
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing data to add to inventory"
        '404':
          description: User not found or gacha item not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found or gacha item not available"

  /all:
    get:
      tags:
        - AUCTIONS
      summary: Retrieve all active or expired auctions
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [active, expired]
          description: Filter auctions by status (active or expired)
      responses:
        '200':
          description: List of auctions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    auction_id:
                      type: integer
                      example: 1
                    item_name:
                      type: string
                      example: "Antique Vase"
                    status:
                      type: string
                      example: "active"
                    start_time:
                      type: string
                      format: date-time
                      example: "2023-10-01T12:00:00Z"
                    end_time:
                      type: string
                      format: date-time
                      example: "2023-10-10T12:00:00Z"
                    starting_bid:
                      type: number
                      example: 100.0
                    highest_bid:
                      type: number
                      example: 150.0
        '400':
          description: Invalid status filter
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid status filter"

  /make_payment:
    post:
      tags:
        - TRANSACTION
      summary: Make a payment for a gacha roll or auction bid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "player1"
                transaction_type:
                  type: string
                  example: "gacha_roll"
                amount:
                  type: number
                  example: 100
      responses:
        '200':
          description: Payment successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Payment successful"
                  new_balance:
                    type: number
                    example: 900
        '400':
          description: Missing data for transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing data for transaction"
        '403':
          description: Insufficient funds for transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Insufficient funds for transaction"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"

  /login:
    post:
      tags:
        - AUTH
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Missing login data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing login data"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"

  /register:
    post:
      tags:
        - AUTH
      summary: Admin registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "admin"
                password:
                  type: string
                  example: "password123"
                email:
                  type: string
                  example: "admin@example.com"
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registration successful"
        '400':
          description: Missing registration data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing registration data"
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User already exists"